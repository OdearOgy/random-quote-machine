{"version":3,"sources":["helpers/fetchHelper.js","components/quote.js","App.js","index.js"],"names":["fetchQuote","callback","fetch","then","response","json","data","globalQuotes","JSON","stringify","localStorage","setItem","Quote","returnRandom","quotes","Math","floor","random","length","className","id","onClick","event","quotesStorage","window","getItem","qText","document","querySelector","qAuthor","parse","err","removeItem","setTimeout","textContent","href","aElm","target","closest","App","ReactDOM","render","getElementById"],"mappings":"2PACaA,G,gBAAa,SAACC,GAIzBC,MAHS,0IAINC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAMC,EAAeC,KAAKC,UAAUH,GACpCI,aAAaC,QAAQ,SAAUJ,GAE3BN,GAAUA,SCPf,SAASW,IAEd,IAkCMC,EAAe,SAACC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAYH,EAAOI,OAAU,GAAK,GAI3D,OAEE,yBAAKC,UAAU,cAAcC,GAAG,aAC9B,yBAAKD,UAAU,aACb,wBAAIC,GAAG,QAAP,iBACA,wBAAIA,GAAG,UAAP,sBAKF,yBAAKD,UAAU,kBACb,4BAAQA,UAAU,WAAWE,QA3CV,SAACC,GACxB,IAAIC,EAAgBC,OAAOd,aAAae,QAAQ,UAC5CX,EAAS,GACTY,EAAQC,SAASC,cAAc,SAC/BC,EAAUF,SAASC,cAAc,WAGf,OAAlBL,EACFT,EAASN,KAAKsB,MAAMP,GAAeT,OAEnCd,GAAW,WACT,IACEc,EAASN,KAAKsB,MAAMN,OAAOd,aAAae,QAAQ,WAAWX,OAC3D,MAAMiB,GACNP,OAAOd,aAAasB,WAAW,cAMrCC,YAAW,WACTP,EAAMQ,YAAN,UAAuBpB,EAAOD,EAAaC,IAApB,OACvBe,EAAQK,YAAR,UAAyBpB,EAAOD,EAAaC,IAApB,UACxB,MAoByDM,GAAG,aAA3D,mBAEA,uBAAGA,GAAG,cAAce,KAAK,yCAAyCd,QApD/C,SAACC,GACxB,IAAMc,EAAOd,EAAMe,OAAOC,QAAQ,KAC9BZ,EAAQC,SAASC,cAAc,SAC/BC,EAAUF,SAASC,cAAc,WACrCQ,EAAKD,KAAL,gDAAqDT,EAAMQ,YAA3D,cAA4EL,EAAQK,cAgDaG,OAAO,UAClG,4BAAQlB,UAAU,YAAlB,kBC7CKoB,MATf,WACE,OACE,yBAAKpB,UAAU,OACb,wBAAIA,UAAU,YAAd,0CACA,kBAACP,EAAD,QCJN4B,IAASC,OAAO,kBAAC,EAAD,MAASd,SAASe,eAAe,W","file":"static/js/main.7f533610.chunk.js","sourcesContent":["\nexport const fetchQuote = (callback) => {\n  const url = `https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json`\n\n\n  fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        const globalQuotes = JSON.stringify(data);\n        localStorage.setItem('quotes', globalQuotes)\n\n        if (callback) callback();\n    })\n}\n\n\n\n","import React from 'react'\nimport '../styles/quote.css';\nimport { fetchQuote } from '../helpers/fetchHelper'\n\nexport function Quote() {\n\n  const handleTweetClick = (event) => {\n    const aElm = event.target.closest('a');\n    let qText = document.querySelector('#text');\n    let qAuthor = document.querySelector('#author');\n    aElm.href = `https://twitter.com/intent/tweet?text=${qText.textContent} - ${qAuthor.textContent}`;\n  }\n\n  const handleQuoteFetch = (event) => {\n    let quotesStorage = window.localStorage.getItem('quotes');\n    let quotes = [];\n    let qText = document.querySelector('#text');\n    let qAuthor = document.querySelector('#author');\n\n    // checking local storage for the quotes\n    if (quotesStorage !== null ) { \n      quotes = JSON.parse(quotesStorage).quotes\n    } else {\n      fetchQuote(() => {\n        try {\n          quotes = JSON.parse(window.localStorage.getItem('quotes')).quotes\n        } catch(err) {\n          window.localStorage.removeItem('quotes')\n        }\n      });\n    }\n\n\n    setTimeout(() => {\n      qText.textContent = `${quotes[returnRandom(quotes)]['quote']}`\n      qAuthor.textContent = `${quotes[returnRandom(quotes)]['author']}`\n    }, 100)\n    \n  }\n\n  const returnRandom = (quotes) => {\n    return Math.floor(Math.random() * (quotes.length) - 0) + 0\n  }\n\n\n  return (\n    \n    <div className=\"QuoteParent\" id=\"quote-box\" >\n      <div className=\"QuoteBody\">\n        <h3 id=\"text\">Hello, World!</h3>\n        <h5 id=\"author\">Newbie Programmer</h5>\n      </div>\n      {/* <div className=\"QuoteImg\"></div> */}\n\n\n      <div className=\"QuoteBtnParent\">\n        <button className=\"QuoteBtn\" onClick={handleQuoteFetch} id=\"new-quote\">Get More Quotes</button>\n        \n        <a id=\"tweet-quote\" href=\"https://twitter.com/intent/tweet?text=\" onClick={handleTweetClick} target=\"_blank\">\n          <button className=\"QuoteBtn\" >\n              Tweet quote\n          </button>\n        </a>\n      </div>\n    </div>\n\n\n\n  )\n}","import React from 'react';\nimport './styles/app.css';\n\nimport { Quote } from './components/quote';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"AppTitle\">Click the Button to get Awesome Quotes</h1>\n      <Quote />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}